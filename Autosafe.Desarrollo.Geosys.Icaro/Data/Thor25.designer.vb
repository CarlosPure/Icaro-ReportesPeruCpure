'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="GEOSYS")> _
Partial Public Class ThorDataContext25
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
#End Region

    Public Sub New()
        MyBase.New(Global.Icaro.My.MySettings.Default.GEOSYSConnectionStringAux, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spEtiquetasConsultar")> _
    Public Function spEtiquetasConsultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdDispositivo", DbType:="VarChar(20)")> ByVal idDispositivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Intervalo", DbType:="VarChar(3)")> ByVal intervalo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FechaInicial", DbType:="VarChar(20)")> ByVal fechaInicial As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FechaFinal", DbType:="VarChar(20)")> ByVal fechaFinal As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdUsuario", DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer)) As ISingleResult(Of spEtiquetasConsultarResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idDispositivo, intervalo, fechaInicial, fechaFinal, idUsuario)
        Return CType(result.ReturnValue, ISingleResult(Of spEtiquetasConsultarResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReporteProgramadoListaActualizar")> _
    Public Function spReporteProgramadoListaActualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Secuencia", DbType:="Int")> ByVal secuencia As System.Nullable(Of Integer)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), secuencia)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.GetVIDPlaca", IsComposable:=True)> _
    Public Function GetVIDPlaca(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Alias", DbType:="VarChar(30)")> ByVal [alias] As String) As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), [alias]).ReturnValue, String)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spActivosSinReportar")> _
    Public Function spActivosSinReportar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdUsuario", DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IP", DbType:="VarChar(20)")> ByVal iP As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="VID", DbType:="VarChar(30)")> ByVal vID As String) As ISingleResult(Of spActivosSinReportarResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idUsuario, iP, vID)
        Return CType(result.ReturnValue, ISingleResult(Of spActivosSinReportarResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spDispositivoPermanencia")> _
    Public Function spDispositivoPermanencia(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(40)")> ByVal vid As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Desde", DbType:="VarChar(20)")> ByVal desde As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Hasta", DbType:="VarChar(20)")> ByVal hasta As String) As ISingleResult(Of spDispositivoPermanenciaResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), vid, desde, hasta)
        Return CType(result.ReturnValue, ISingleResult(Of spDispositivoPermanenciaResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.Minute2Text", IsComposable:=True)> _
    Public Function Minute2Text(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CantidadMinutos", DbType:="Float")> ByVal cantidadMinutos As System.Nullable(Of Double)) As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), cantidadMinutos).ReturnValue, String)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.Minute2Text2", IsComposable:=True)> _
    Public Function Minute2Text2(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CantidadMinutos", DbType:="Float")> ByVal cantidadMinutos As System.Nullable(Of Double)) As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), cantidadMinutos).ReturnValue, String)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getUsuarioxID", IsComposable:=True)> _
    Public Function getUsuarioxID(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer)) As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idUsuario).ReturnValue, String)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spActivoAliasBuscar")> _
    Public Function spActivoAliasBuscar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Vid", DbType:="VarChar(20)")> ByVal vid As String) As ISingleResult(Of spActivoAliasBuscarResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), vid)
        Return CType(result.ReturnValue, ISingleResult(Of spActivoAliasBuscarResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getDescripcionEvento", IsComposable:=True)> _
    Public Function getDescripcionEvento(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Vid", DbType:="VarChar(30)")> ByVal vid As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Evento", DbType:="Int")> ByVal evento As System.Nullable(Of Integer)) As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), vid, evento).ReturnValue, String)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getCalificacionCriterio", IsComposable:=True)> _
    Public Function getCalificacionCriterio(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipoReporte", DbType:="VarChar(3)")> ByVal tipoReporte As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Columna", DbType:="SmallInt")> ByVal columna As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Valor", DbType:="Float")> ByVal valor As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ConValor", DbType:="Bit")> ByVal conValor As System.Nullable(Of Boolean)) As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idUsuario, tipoReporte, columna, valor, conValor).ReturnValue, String)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.BuscarUltimoResumen", IsComposable:=True)> _
    Public Function BuscarUltimoResumen(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer)) As System.Nullable(Of Integer)
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idUsuario).ReturnValue, System.Nullable(Of Integer))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReporteProgramadoResumen_Ingresar")> _
    Public Function spReporteProgramadoResumen_Ingresar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdUsuario", DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SecuenciaLog", DbType:="Int")> ByVal secuenciaLog As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipoReporte", DbType:="VarChar(5)")> ByVal tipoReporte As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Año", DbType:="SmallInt")> ByVal año As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Mes", DbType:="SmallInt")> ByVal mes As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Semana", DbType:="SmallInt")> ByVal semana As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Dia", DbType:="SmallInt")> ByVal dia As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TotalBuenos", DbType:="SmallInt")> ByVal totalBuenos As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TotalRegulares", DbType:="SmallInt")> ByVal totalRegulares As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TotalMalos", DbType:="SmallInt")> ByVal totalMalos As System.Nullable(Of Short)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idUsuario, secuenciaLog, tipoReporte, año, mes, semana, dia, totalBuenos, totalRegulares, totalMalos)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReporteProgradolog_Ingresar")> _
    Public Function spReporteProgradolog_Ingresar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_iIdUsuario", DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_vTipoReporte", DbType:="VarChar(50)")> ByVal tipoReporte As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_vObservaciones", DbType:="VarChar(300)")> ByVal observaciones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_vEmail", DbType:="VarChar(100)")> ByVal email As String) As ISingleResult(Of spReporteProgradolog_IngresarResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idUsuario, tipoReporte, observaciones, email)
        Return CType(result.ReturnValue, ISingleResult(Of spReporteProgradolog_IngresarResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReporteProgramadoResumen_Listar")> _
    Public Function spReporteProgramadoResumen_Listar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipoReporte", DbType:="VarChar(3)")> ByVal tipoReporte As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Año", DbType:="SmallInt")> ByVal año As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Mes", DbType:="SmallInt")> ByVal mes As System.Nullable(Of Short)) As ISingleResult(Of spReporteProgramadoResumen_ListarResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), tipoReporte, idUsuario, año, mes)
        Return CType(result.ReturnValue, ISingleResult(Of spReporteProgramadoResumen_ListarResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getFactorConsumoHoras", IsComposable:=True)> _
    Public Function getFactorConsumoHoras(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="VID", DbType:="VarChar(30)")> ByVal vID As String) As System.Nullable(Of Double)
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), vID).ReturnValue, System.Nullable(Of Double))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getFactorConsumoPlaca", IsComposable:=True)> _
    Public Function getFactorConsumoPlaca(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Placa", DbType:="VarChar(130)")> ByVal placa As String) As System.Nullable(Of Double)
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), placa).ReturnValue, System.Nullable(Of Double))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getFactorConsumoPlacaHoras", IsComposable:=True)> _
    Public Function getFactorConsumoPlacaHoras(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Placa", DbType:="VarChar(130)")> ByVal placa As String) As System.Nullable(Of Double)
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), placa).ReturnValue, System.Nullable(Of Double))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getFactorConsumo", IsComposable:=True)> _
    Public Function getFactorConsumo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="VID", DbType:="VarChar(30)")> ByVal vID As String) As System.Nullable(Of Double)
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), vID).ReturnValue, System.Nullable(Of Double))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReporteProgramadoListar")> _
    Public Function spReporteProgramadoListar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal p_iIdUsuario As System.Nullable(Of Integer)) As ISingleResult(Of spReporteProgramadoListarResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), p_iIdUsuario)
        Return CType(result.ReturnValue, ISingleResult(Of spReporteProgramadoListarResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReporteProgramadoForzarFin")> _
    Public Function spReporteProgramadoForzarFin(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_iSecuencia", DbType:="Int")> ByVal secuencia As System.Nullable(Of Integer)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), secuencia)
        Return CType(result.ReturnValue, Integer)
    End Function



    '******************************************************************************
    'TODO CAMBIOS REALIZADOS POR VICTOR.VEGA 20180910
    'PARA FORZAR EL ENVIO DE UN REPORTE
    '******************************************************************************

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReporteProgradolog_IngresarPendiente")> _
    Public Function spReporteProgradolog_IngresarPendiente(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_iIdUsuario", DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_vTipoReporte", DbType:="VarChar(50)")> ByVal tipoReporte As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_iSecuencia", DbType:="Int")> ByVal secuencia As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_vFechaInicial", DbType:="VarChar(20)")> ByVal fechaInicial As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_vFechaFinal", DbType:="VarChar(20)")> ByVal fechaFinal As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_vErrorEnvio", DbType:="VarChar(20)")> ByVal errorEnvio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="@p_vParametros", DbType:="VarChar(100)")> ByVal parametros As String) As ISingleResult(Of spReporteProgradolog_IngresarPendienteResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idUsuario, tipoReporte, secuencia, fechaInicial, fechaFinal, errorEnvio, parametros)
        Return CType(result.ReturnValue, ISingleResult(Of spReporteProgradolog_IngresarPendienteResult))
    End Function


    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReporteProgramadoPendienteForzarFin")> _
    Public Function spReporteProgramadoPendienteForzarFin(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_iIdUsuario", DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_vTipoReporte", DbType:="VarChar(50)")> ByVal tipoReporte As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_iSecuencia", DbType:="Int")> ByVal secuencia As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_vIntervalo", DbType:="VarChar(50)")> ByVal intervalo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="p_vParametros", DbType:="VarChar(100)")> ByVal parametros As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idUsuario, tipoReporte, secuencia, intervalo, parametros)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getIdEntidadxSecuencia", IsComposable:=True)> _
    Public Function getIdEntidadxSecuencia(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal secuencia As System.Nullable(Of Integer)) As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), secuencia).ReturnValue, String)
    End Function

    '******************************************************************************

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ConvertirValorES", IsComposable:=True)> _
    Public Function ConvertirValorES(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal idActivo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NombreEtiqueta", DbType:="VarChar(20)")> ByVal nombreEtiqueta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Valor", DbType:="Float")> ByVal valor As System.Nullable(Of Double)) As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idActivo, nombreEtiqueta, valor).ReturnValue, String)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.GetNearestPoint", IsComposable:=True)> _
    Public Function GetNearestPoint(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Latitude", DbType:="Float")> ByVal latitude As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Longitude", DbType:="Float")> ByVal longitude As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdUsuario", DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer)) As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), latitude, longitude, idUsuario).ReturnValue, String)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spDispositivoResumenEventos")> _
    Public Function spDispositivoResumenEventos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal vid As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FechaDesde", DbType:="VarChar(20)")> ByVal fechaDesde As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FechaHasta", DbType:="VarChar(20)")> ByVal fechaHasta As String) As ISingleResult(Of spDispositivoResumenEventosResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), vid, fechaDesde, fechaHasta)
        Return CType(result.ReturnValue, ISingleResult(Of spDispositivoResumenEventosResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spUsuarioResumenAlertas")> _
    Public Function spUsuarioResumenAlertas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FechaDesde", DbType:="VarChar(20)")> ByVal fechaDesde As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FechaHasta", DbType:="VarChar(20)")> ByVal fechaHasta As String) As ISingleResult(Of spUsuarioResumenAlertasResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idUsuario, fechaDesde, fechaHasta)
        Return CType(result.ReturnValue, ISingleResult(Of spUsuarioResumenAlertasResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spReporteProgramadoListar_Procesar")> _
    Public Function spReporteProgramadoListar_Procesar() As ISingleResult(Of spReporteProgramadoListar_ProcesarResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, ISingleResult(Of spReporteProgramadoListar_ProcesarResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spProcesarReporteProgramado")> _
    Public Function spProcesarReporteProgramado(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Secuencia", DbType:="Int")> ByVal secuencia As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdUsuario", DbType:="Int")> ByVal idUsuario As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Intervalo", DbType:="VarChar(3)")> ByVal intervalo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Tipo", DbType:="VarChar(3)")> ByVal tipo As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), secuencia, idUsuario, intervalo, tipo)
        Return CType(result.ReturnValue, Integer)
    End Function
End Class
